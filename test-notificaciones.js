// Script para probar las rutas de notificaciones
const axios = require('axios');

const baseURL = 'http://localhost:3002/api/v1';

async function probarRutasNotificaciones() {
    console.log('üîî Probando rutas de notificaciones...\n');
    
    try {
        // Primero necesitamos una persona v√°lida para las pruebas
        let idUsuarioTest = 1; // Usar el ID 1 que ya existe
        
        // 1. Probar POST - Crear nueva notificaci√≥n
        console.log('1. ‚ûï Creando nueva notificaci√≥n...');
        const nuevaNotificacion = {
            "id_usuario": idUsuarioTest.toString(),
            "tipo": "sistema",
            "estado": "sin leer",
            "titulo": "Notificaci√≥n de prueba - Sistema actualizado",
            "fecha": new Date().toISOString()
        };
        
        try {
            const response = await axios.post(`${baseURL}/notificaciones`, nuevaNotificacion);
            console.log(`‚úÖ Notificaci√≥n creada con ID: ${response.data.id}`);
            const notificacionCreada = response.data;
            
            // 2. Probar GET por ID - Obtener notificaci√≥n por ID
            console.log('\n2. üîç Obteniendo notificaci√≥n por ID...');
            try {
                const notifResponse = await axios.get(`${baseURL}/notificaciones/${notificacionCreada.id}`);
                console.log(`‚úÖ Notificaci√≥n obtenida: "${notifResponse.data.titulo}"`);
                console.log(`   Estado: ${notifResponse.data.estado}`);
            } catch (error) {
                console.log('‚ùå Error obteniendo notificaci√≥n por ID:', error.response?.data || error.message);
            }
            
            // 3. Probar GET por usuario - Obtener notificaciones de un usuario
            console.log('\n3. üë§ Obteniendo notificaciones del usuario...');
            try {
                const userNotifResponse = await axios.get(`${baseURL}/notificaciones/usuario/${idUsuarioTest}`);
                console.log(`‚úÖ ${userNotifResponse.data.length} notificaciones encontradas para el usuario`);
                if (userNotifResponse.data.length > 0) {
                    console.log(`   √öltima: "${userNotifResponse.data[0].titulo}"`);
                }
            } catch (error) {
                console.log('‚ùå Error obteniendo notificaciones del usuario:', error.response?.data || error.message);
            }
            
            // 4. Probar PUT - Actualizar notificaci√≥n (cambiar estado)
            console.log('\n4. ‚úèÔ∏è Actualizando estado de notificaci√≥n...');
            const datosActualizacion = {
                "estado": "le√≠do"
            };
            
            try {
                const updateResponse = await axios.put(`${baseURL}/notificaciones/${notificacionCreada.id}`, datosActualizacion);
                console.log('‚úÖ Notificaci√≥n actualizada exitosamente');
                console.log(`   Nuevo estado: ${updateResponse.data.estado}`);
            } catch (error) {
                console.log('‚ùå Error actualizando notificaci√≥n:', error.response?.data || error.message);
            }
            
            // 5. Probar DELETE - Eliminar notificaci√≥n
            console.log('\n5. ‚ùå Eliminando notificaci√≥n de prueba...');
            try {
                const deleteResponse = await axios.delete(`${baseURL}/notificaciones/${notificacionCreada.id}`);
                console.log('‚úÖ Notificaci√≥n eliminada exitosamente');
                console.log(`   Mensaje: ${deleteResponse.data.mensaje}`);
            } catch (error) {
                console.log('‚ùå Error eliminando notificaci√≥n:', error.response?.data || error.message);
            }
            
        } catch (error) {
            console.log('‚ùå Error creando notificaci√≥n:', error.response?.data || error.message);
        }
        
        // 6. Probar error 404
        console.log('\n6. üö´ Probando error 404...');
        try {
            await axios.get(`${baseURL}/notificaciones/999999`);
        } catch (error) {
            if (error.response?.status === 404) {
                console.log('‚úÖ Error 404 manejado correctamente');
            } else {
                console.log('‚ùå Error inesperado:', error.response?.data || error.message);
            }
        }
        
        // 7. Probar error de usuario no encontrado
        console.log('\n7. üö´ Probando usuario no encontrado...');
        try {
            await axios.get(`${baseURL}/notificaciones/usuario/999999`);
        } catch (error) {
            if (error.response?.status === 404) {
                console.log('‚úÖ Error de usuario no encontrado manejado correctamente');
            } else {
                console.log('‚ùå Error inesperado:', error.response?.data || error.message);
            }
        }
        
        // 8. Probar datos inv√°lidos en POST
        console.log('\n8. üö´ Probando datos inv√°lidos...');
        try {
            await axios.post(`${baseURL}/notificaciones`, {
                "titulo": "Sin campos requeridos"
            });
        } catch (error) {
            if (error.response?.status === 400) {
                console.log('‚úÖ Error 400 por datos inv√°lidos manejado correctamente');
            } else {
                console.log('‚ùå Error inesperado:', error.response?.data || error.message);
            }
        }
        
        console.log('\nüéâ Pruebas de notificaciones completadas!');
        console.log('\nüìã Endpoints listos para Postman:');
        console.log(`   GET    ${baseURL}/notificaciones/{id}`);
        console.log(`   GET    ${baseURL}/notificaciones/usuario/{id_usuario}`);
        console.log(`   POST   ${baseURL}/notificaciones`);
        console.log(`   PUT    ${baseURL}/notificaciones/{id}`);
        console.log(`   DELETE ${baseURL}/notificaciones/{id}`);
        
        console.log('\nüìù Ejemplo de JSON para POST:');
        console.log(JSON.stringify({
            "id_usuario": "1",
            "tipo": "mensaje",
            "estado": "sin leer",
            "titulo": "Nueva tarea asignada",
            "fecha": "2025-06-30T14:45:00Z"
        }, null, 2));
        
        console.log('\nüîÑ Ejemplo de JSON para PUT:');
        console.log(JSON.stringify({
            "estado": "le√≠do"
        }, null, 2));
        
    } catch (error) {
        console.error('‚ùå Error general:', error.message);
    }
}

// Ejecutar solo si se llama directamente
if (require.main === module) {
    probarRutasNotificaciones();
}

module.exports = { probarRutasNotificaciones };
